{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/edwin/Desktop/React/challenges/employees/src/Components/ListOfEmployees.js\";\nimport LIST_EMPLOYEE from '../queries/ListEmployees';\nimport { useQuery } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport { ApolloProvider } from 'react-apollo';\nimport Loading from 'react-loading';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst ListOfEmployees = () => {\n  const shortID = id => {\n    var str = id;\n    var sID = str.substring(0, 7);\n    return sID;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Query, {\n    query: LIST_EMPLOYEE,\n    children: ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/_jsxDEV(Loading, {\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 31\n      }, this);\n      if (error) console.log(error);\n      return (\n        /*#__PURE__*/\n        // <p>\n        //     {console.log(data.listEmployees.items)}\n        // </p>\n        _jsxDEV(\"div\", {\n          children: data.listEmployees.items.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: shortID(row.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      );\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this); // const {loading, error, data } = useQuery(LIST_EMPLOYEE);\n  // return (\n  //     <div>\n  //          <p>\n  //             {console.log(data.listEmployees.items)}\n  //         </p>\n  //     </div>\n  // )\n}; // const { loading, error, data } = useQuery(LIST_EMPLOYEE);\n// if (loading) return <div>Loading...</div>;\n// if (error) return <div>Error!</div>;\n// return (\n//     //<TableBody>\n//          <p>\n//              {console.log(data.listEmployees.items)}\n//          </p>\n//             // <TableRow key={row.id}>\n//             //     <TableCell component=\"th\" scope=\"row\">\n//             //         {row.id}\n//             //         </TableCell>\n//             //          <TableCell align>{row.id}</TableCell>\n//             //         <TableCell align>{row.firstname}</TableCell>\n//             //         <TableCell align>{row.lastname}</TableCell>\n//             //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n//             //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n//             // </TableRow>    \n//     //</TableBody>\n// )\n\n\n_c = ListOfEmployees;\nexport default ListOfEmployees;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfEmployees\");","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/employees/src/Components/ListOfEmployees.js"],"names":["LIST_EMPLOYEE","useQuery","Query","ApolloProvider","Loading","TableBody","TableCell","TableHead","TableRow","ListOfEmployees","shortID","id","str","sID","substring","loading","error","data","console","log","listEmployees","items","map","row","firstname","lastname"],"mappings":";;AACA,OAAOA,aAAP,MAA0B,0BAA1B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE1B,QAAMC,OAAO,GAAIC,EAAD,IAAQ;AACpB,QAAIC,GAAG,GAAGD,EAAV;AACA,QAAIE,GAAG,GAAGD,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,CAAV;AACA,WAAOD,GAAP;AAEH,GALD;;AAOA,sBACI,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEb,aAAd;AAAA,cACC,CAAC;AAAEe,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AACb,UAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACX;AAAA;AACE;AACA;AACA;AAEJ;AAAA,oBACKC,IAAI,CAACG,aAAL,CAAmBC,KAAnB,CAAyBC,GAAzB,CAA6BC,GAAG,iBAC1B,QAAC,QAAD;AAAA,oCAEI,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBAAwCb,OAAO,CAACa,GAAG,CAACZ,EAAL;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGK,QAAC,SAAD;AAAA,wBAAYY,GAAG,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAHL,eAIK,QAAC,SAAD;AAAA,wBAAYD,GAAG,CAACE;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN;AADL;AAAA;AAAA;AAAA;AAAA;AALE;AAkBI;AAtBN;AAAA;AAAA;AAAA;AAAA,UADJ,CAT0B,CAsC1B;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACH,CAjDD,C,CAkDI;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA1EEhB,e;AA6EN,eAAeA,eAAf","sourcesContent":["\nimport LIST_EMPLOYEE from '../queries/ListEmployees';\nimport { useQuery } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport { ApolloProvider } from 'react-apollo';\nimport Loading from 'react-loading';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst ListOfEmployees = () => {\n\n    const shortID = (id) => {\n        var str = id;\n        var sID = str.substring(0, 7);\n        return sID;\n\n    }\n\n    return (\n        <Query query={LIST_EMPLOYEE}>\n        {({ loading, error, data }) => {\n          if (loading) return <Loading loading={loading} />;\n          if (error) console.log(error);\n          return (\n            // <p>\n            //     {console.log(data.listEmployees.items)}\n            // </p>\n\n        <div>\n            {data.listEmployees.items.map(row => (\n                   <TableRow>\n                       \n                       <TableCell component=\"th\" scope=\"row\" >{shortID(row.id)}</TableCell>\n                        <TableCell>{row.firstname}</TableCell>\n                        <TableCell>{row.lastname}</TableCell>\n                   </TableRow> \n                    \n\n                ))\n            }   \n         </div>\n            )}\n        }\n      </Query>\n    )\n    \n\n    // const {loading, error, data } = useQuery(LIST_EMPLOYEE);\n    // return (\n    //     <div>\n\n\n    //          <p>\n    //             {console.log(data.listEmployees.items)}\n    //         </p>\n    //     </div>\n           \n    // )\n}\n    // const { loading, error, data } = useQuery(LIST_EMPLOYEE);\n\n    // if (loading) return <div>Loading...</div>;\n    // if (error) return <div>Error!</div>;\n\n    // return (\n    //     //<TableBody>\n    //          <p>\n    //              {console.log(data.listEmployees.items)}\n    //          </p>\n\n       \n\n    //             // <TableRow key={row.id}>\n    //             //     <TableCell component=\"th\" scope=\"row\">\n    //             //         {row.id}\n    //             //         </TableCell>\n    //             //          <TableCell align>{row.id}</TableCell>\n    //             //         <TableCell align>{row.firstname}</TableCell>\n    //             //         <TableCell align>{row.lastname}</TableCell>\n    //             //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n    //             //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n    //             // </TableRow>    \n    //     //</TableBody>\n    // )\n\n\nexport default ListOfEmployees;"]},"metadata":{},"sourceType":"module"}