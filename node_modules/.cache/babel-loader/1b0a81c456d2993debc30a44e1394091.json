{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { graphql, Query } from 'react-apollo';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from '@apollo/client';\nimport CREATE_EMPLOYEE from './mutations/createEmployee';\nimport LIST_EMPLOYEE from './queries/ListEmployees';\nimport './index.css';\n\nconst ListOfEmployees = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LIST_EMPLOYEE);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    /*#__PURE__*/\n    //<TableBody>\n    _jsxDEV(\"p\", {\n      children: data.listEmployees.items.map(row => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: console.log(row)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) // <TableRow key={row.id}>\n    //     <TableCell component=\"th\" scope=\"row\">\n    //         {row.id}\n    //         </TableCell>\n    //          <TableCell align>{row.id}</TableCell>\n    //         <TableCell align>{row.firstname}</TableCell>\n    //         <TableCell align>{row.lastname}</TableCell>\n    //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n    //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n    // </TableRow>    \n    //</TableBody>\n\n  );\n};\n\n_s(ListOfEmployees, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ListOfEmployees;\n\nconst AddEmployee = () => {\n  _s2();\n\n  const EmployeeForm = () => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"forms\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"First Name\",\n        value: setFirstName,\n        onChange: evt => this.onChange('firstName', evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"standard-basic\",\n        label: \"Last Name\",\n        value: setLastName,\n        onChange: evt => this.onChange('lastName', evt.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Mutation, {\n        mutation: CREATE_EMPLOYEE,\n        variables: {\n          firstname: firstName,\n          lastname: lastName\n        },\n        children: postMutation => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => {\n            postMutation();\n            submitButtonClicked();\n            clearForm();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  };\n\n  const clearForm = () => {\n    setFirstName('');\n    setLastName('');\n  };\n\n  const submitButtonClicked = () => {\n    if (visible) {\n      console.log(firstName);\n      console.log(lastName);\n    }\n  };\n\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState('Add Emmployee');\n  const [id, setID] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [skills, setSkills] = useState([]);\n  const renderForm = visible ? /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 36\n  }, this) : null;\n  const buttonText = title ? 'Add Employee' : setTitle('Back');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderForm, /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"addEmpButton\",\n      onClick: (() => setVisible(true), setTitle('Back')),\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddEmployee, \"JxMlCdO2PCCTVE1rlJc+YFI8/VI=\");\n\n_c2 = AddEmployee;\nexport default AddEmployee;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListOfEmployees\");\n$RefreshReg$(_c2, \"AddEmployee\");","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js"],"names":["graphql","Query","Mutation","gql","React","Component","Table","TableCell","TableHead","TableRow","Button","FormControl","TableBody","TextField","useMutation","useQuery","CREATE_EMPLOYEE","LIST_EMPLOYEE","ListOfEmployees","loading","error","data","message","listEmployees","items","map","row","console","log","AddEmployee","EmployeeForm","setFirstName","evt","onChange","target","value","setLastName","firstname","firstName","lastname","lastName","postMutation","submitButtonClicked","clearForm","visible","setVisible","useState","title","setTitle","id","setID","skills","setSkills","renderForm","buttonText"],"mappings":"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","sourcesContent":["import { graphql, Query } from 'react-apollo'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport React, { Component } from 'react'\nimport Table from '@material-ui/core/Table';    \nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from '@apollo/client';\nimport CREATE_EMPLOYEE from './mutations/createEmployee'\nimport LIST_EMPLOYEE from './queries/ListEmployees'\n\nimport './index.css';\n\nconst ListOfEmployees = () => {\n    const { loading, error, data } = useQuery(LIST_EMPLOYEE);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        //<TableBody>\n        <p>\n            {data.listEmployees.items.map(row => (\n                \n                    <p>\n                    {console.log(row)}\n                    </p> \n            ))}\n        </p>\n\n                // <TableRow key={row.id}>\n                //     <TableCell component=\"th\" scope=\"row\">\n                //         {row.id}\n                //         </TableCell>\n                //          <TableCell align>{row.id}</TableCell>\n                //         <TableCell align>{row.firstname}</TableCell>\n                //         <TableCell align>{row.lastname}</TableCell>\n                //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n                //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n                // </TableRow>    \n        //</TableBody>\n    )\n}\n\nconst AddEmployee = () => { \n\n\n    const EmployeeForm = () => {\n\n        return (\n            <FormControl className=\"forms\">\n                <TextField id=\"standard-basic\" label=\"First Name\" value={setFirstName} onChange={evt => this.onChange('firstName', evt.target.value)} />\n                <TextField id=\"standard-basic\" label=\"Last Name\" value={setLastName} onChange={evt => this.onChange('lastName', evt.target.value)}/>\n                <Mutation mutation={CREATE_EMPLOYEE} variables={{firstname: firstName, lastname: lastName}}>\n                    {postMutation => <Button variant=\"contained\" color=\"primary\" \n                        onClick={() => {\n                            postMutation();\n                            submitButtonClicked();\n                            clearForm();\n                        }}>\n                    Submit\n                    </Button>}\n                </Mutation>\n            </FormControl>\n        )\n    }\n\n\n    const clearForm = () => {\n        setFirstName('');\n        setLastName('');\n    }\n\n    const submitButtonClicked = () => {\n        if (visible) {\n            console.log(firstName)\n            console.log(lastName)\n        }\n    }\n\n    const [visible, setVisible] = useState(false);\n    const [title, setTitle] = useState('Add Emmployee');\n    const [id, setID] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [skills, setSkills] = useState([]);\n\n    const renderForm = visible ? ( <EmployeeForm /> ) : null;\n    const buttonText = title ? 'Add Employee' : setTitle('Back');\n\n    return (\n        <div>\n            {renderForm}\n            <Button variant=\"contained\" color=\"primary\" className=\"addEmpButton\"\n            onClick={() => setVisible(true), setTitle('Back')} \n            >\n                {buttonText}\n            </Button>\n            \n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Id</TableCell>\n                        <TableCell>First Name</TableCell>\n                        <TableCell>Last Name</TableCell>\n                    </TableRow>\n                </TableHead>\n            </Table>\n\n            {/* <Query query={LIST_EMPLOYEE}>\n\n            </Query> */}\n        </div>\n    )\n}\n         \nexport default AddEmployee;"]},"metadata":{},"sourceType":"module"}