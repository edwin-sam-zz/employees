{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/edwin/Desktop/React/challenges/employees/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"query listEmployees {\\n                                        listEmployees {\\n                                            items {\\n                                                id\\n                                                firstname\\n                                                lastname\\n                                                skills\\n                                            }\\n                                        }\\n                                    }\\n                                    \"]);_templateObject=function _templateObject(){return data;};return data;}import LIST_EMPLOYEE from'../queries/ListEmployees';import REMOVE_EMPLOYEE from'../mutations/removeEmployee';import{useQuery}from'@apollo/client';import{Query}from\"react-apollo\";import{ApolloProvider}from'react-apollo';import Loading from'react-loading';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Table from'@material-ui/core/Table';import Button from'@material-ui/core/Button';import{Mutation}from'react-apollo';import gql from'graphql-tag';var ListOfEmployees=function ListOfEmployees(){var shortID=function shortID(id){var sID=id.substring(0,7);return sID;};return/*#__PURE__*/_jsx(Query,{query:LIST_EMPLOYEE,children:function children(_ref){var loading=_ref.loading,error=_ref.error,data=_ref.data;if(loading)return/*#__PURE__*/_jsx(Loading,{loading:loading});if(error)console.log(error);return/*#__PURE__*/ (// <p>\n//     {console.log(data.listEmployees.items)}\n// </p>\n_jsx(TableBody,{children:data.listEmployees.items.map(function(row){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:shortID(row.id)}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:row.firstname}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.lastname}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.skills}),/*#__PURE__*/_jsx(Mutation,{mutation:REMOVE_EMPLOYEE,refetchQueries:[{query:gql(_templateObject())}],children:function children(mutation){return/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return mutation({variables:{id:row.id}});},children:\"Delete\"});}}),/*#__PURE__*/_jsx(Button,{children:\"Edit\"})]},row.id);})}));}});};export default ListOfEmployees;","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/employees/src/Components/ListOfEmployees.js"],"names":["LIST_EMPLOYEE","REMOVE_EMPLOYEE","useQuery","Query","ApolloProvider","Loading","TableBody","TableCell","TableHead","TableRow","Table","Button","Mutation","gql","ListOfEmployees","shortID","id","sID","substring","loading","error","data","console","log","listEmployees","items","map","row","firstname","lastname","skills","query","mutation","variables"],"mappings":"g6BACA,MAAOA,CAAAA,aAAP,KAA0B,0BAA1B,CACA,MAAOC,CAAAA,eAAP,KAA6B,6BAA7B,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,KAAT,KAAsB,cAAtB,CACA,OAASC,cAAT,KAA+B,cAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAE1B,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,EAAD,CAAQ,CACpB,GAAIC,CAAAA,GAAG,CAAGD,EAAE,CAACE,SAAH,CAAa,CAAb,CAAgB,CAAhB,CAAV,CACA,MAAOD,CAAAA,GAAP,CACH,CAHD,CAKA,mBACI,KAAC,KAAD,EAAO,KAAK,CAAEjB,aAAd,UACC,uBAA8B,IAA3BmB,CAAAA,OAA2B,MAA3BA,OAA2B,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,IAAW,MAAXA,IAAW,CAC7B,GAAIF,OAAJ,CAAa,mBAAO,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAAP,CACb,GAAIC,KAAJ,CAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ,EACX,oBACE;AACA;AACA;AAEI,KAAC,SAAD,WACKC,IAAI,CAACG,aAAL,CAAmBC,KAAnB,CAAyBC,GAAzB,CAA6B,SAAAC,GAAG,qBAC7B,MAAC,QAAD,yBACI,KAAC,SAAD,EAAW,SAAS,CAAC,IAArB,CAA0B,KAAK,CAAC,KAAhC,UACKZ,OAAO,CAACY,GAAG,CAACX,EAAL,CADZ,EADJ,cAII,KAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,UAA2BW,GAAG,CAACC,SAA/B,EAJJ,cAKI,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BD,GAAG,CAACE,QAA9B,EALJ,cAMI,KAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,UAA0BF,GAAG,CAACG,MAA9B,EANJ,cAOI,KAAC,QAAD,EAAU,QAAQ,CAAE7B,eAApB,CAAqC,cAAc,CAAE,CAAC,CAAC8B,KAAK,CAAElB,GAAF,mBAAN,CAAD,CAArD,UAWK,kBAAAmB,QAAQ,qBAAI,KAAC,MAAD,EAAQ,OAAO,CAAE,yBAC1BA,CAAAA,QAAQ,CAAC,CAAEC,SAAS,CAAE,CAACjB,EAAE,CAAEW,GAAG,CAACX,EAAT,CAAb,CAAD,CADkB,EAAjB,oBAAJ,EAXb,EAPJ,cAuBI,KAAC,MAAD,mBAvBJ,GAAeW,GAAG,CAACX,EAAnB,CAD6B,EAAhC,CADL,EALN,EAmCI,CAvCN,EADJ,CA4CH,CAnDD,CAqDA,cAAeF,CAAAA,eAAf","sourcesContent":["\nimport LIST_EMPLOYEE from '../queries/ListEmployees';\nimport REMOVE_EMPLOYEE  from '../mutations/removeEmployee';\nimport { useQuery } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport { ApolloProvider } from 'react-apollo';\nimport Loading from 'react-loading';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag'\n\nconst ListOfEmployees = () => {\n\n    const shortID = (id) => {\n        var sID = id.substring(0, 7);\n        return sID;\n    }\n\n    return (\n        <Query query={LIST_EMPLOYEE}>\n        {({ loading, error, data }) => {\n          if (loading) return <Loading loading={loading} />;\n          if (error) console.log(error);\n          return (\n            // <p>\n            //     {console.log(data.listEmployees.items)}\n            // </p>\n\n                <TableBody>\n                    {data.listEmployees.items.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {shortID(row.id)}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.firstname}</TableCell>\n                            <TableCell align=\"right\">{row.lastname}</TableCell>\n                            <TableCell align=\"right\">{row.skills}</TableCell>\n                            <Mutation mutation={REMOVE_EMPLOYEE} refetchQueries={[{query: gql`query listEmployees {\n                                        listEmployees {\n                                            items {\n                                                id\n                                                firstname\n                                                lastname\n                                                skills\n                                            }\n                                        }\n                                    }\n                                    `}]}>\n                                {mutation => <Button onClick={() => \n                                    mutation({ variables: {id: row.id }})}>\n                                        Delete\n                                        </Button>}\n                            </Mutation>\n                            <Button>Edit</Button>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            )}\n        }\n      </Query>\n    )\n}\n\nexport default ListOfEmployees;"]},"metadata":{},"sourceType":"module"}