{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js\",\n    _s = $RefreshSig$();\n\nimport { graphql, Query } from 'react-apollo';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport React, { Component } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from '@apollo/client';\nimport CREATE_EMPLOYEE from './mutations/createEmployee';\nimport LIST_EMPLOYEE from './queries/ListEmployees';\nimport './index.css';\n\nconst clearForm = () => {\n  state.setState({\n    firstName: '',\n    lastName: ''\n  });\n};\n\nconst submitButtonClicked = () => {\n  if (state.visible) {\n    console.log(state.firstName);\n    console.log(state.lastName);\n  }\n};\n\nconst EmployeeForm = () => {\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: \"forms\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"First Name\",\n      value: this.state.firstName,\n      onChange: evt => this.onChange('firstName', evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Last Name\",\n      value: this.state.lastName,\n      onChange: evt => this.onChange('lastName', evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: CREATE_EMPLOYEE,\n      variables: {\n        firstname: this.state.firstName,\n        lastname: this.state.lastName\n      },\n      children: postMutation => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          postMutation();\n          submitButtonClicked();\n          clearForm();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = EmployeeForm;\n\nconst ListOfEmployees = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(LIST_EMPLOYEE);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    /*#__PURE__*/\n    //<TableBody>\n    _jsxDEV(\"p\", {\n      children: data.listEmployees.items.map(row => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: console.log(row)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) // <TableRow key={row.id}>\n    //     <TableCell component=\"th\" scope=\"row\">\n    //         {row.id}\n    //         </TableCell>\n    //          <TableCell align>{row.id}</TableCell>\n    //         <TableCell align>{row.firstname}</TableCell>\n    //         <TableCell align>{row.lastname}</TableCell>\n    //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n    //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n    // </TableRow>    \n    //</TableBody>\n\n  );\n};\n\n_s(ListOfEmployees, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = ListOfEmployees;\nconst state = {\n  id: '',\n  firstName: '',\n  lastName: '',\n  skills: [],\n  visible: false,\n  title: 'Add Employee'\n};\nconst renderForm = state.visible ? /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 95,\n  columnNumber: 38\n}, this) : null;\nconst buttonText = state.title ? 'Add Employee' : 'Back';\n\nconst AddEmployee = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderForm, /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"addEmpButton\",\n      onClick: () => state.setState({\n        visible: !state.visible,\n        title: !state.title\n      }),\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = AddEmployee;\nexport default AddEmployee;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EmployeeForm\");\n$RefreshReg$(_c2, \"ListOfEmployees\");\n$RefreshReg$(_c3, \"AddEmployee\");","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js"],"names":["graphql","Query","Mutation","gql","React","Component","Table","TableCell","TableHead","TableRow","Button","FormControl","TableBody","TextField","useMutation","useQuery","CREATE_EMPLOYEE","LIST_EMPLOYEE","clearForm","state","setState","firstName","lastName","submitButtonClicked","visible","console","log","EmployeeForm","evt","onChange","target","value","firstname","lastname","postMutation","ListOfEmployees","loading","error","data","message","listEmployees","items","map","row","id","skills","title","renderForm","buttonText","AddEmployee"],"mappings":"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","sourcesContent":["import { graphql, Query } from 'react-apollo'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport React, { Component } from 'react'\nimport Table from '@material-ui/core/Table';    \nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from '@apollo/client';\nimport CREATE_EMPLOYEE from './mutations/createEmployee'\nimport LIST_EMPLOYEE from './queries/ListEmployees'\n\nimport './index.css';\n\n\nconst clearForm = () => {\n    state.setState({\n      firstName: '',\n      lastName: ''\n    })\n}\n\nconst submitButtonClicked = () => {\n        if (state.visible) {\n            console.log(state.firstName)\n            console.log(state.lastName)\n        }\n}\n\nconst EmployeeForm = () => {\n\n    return (\n        <FormControl className=\"forms\">\n            <TextField id=\"standard-basic\" label=\"First Name\" value={this.state.firstName} onChange={evt => this.onChange('firstName', evt.target.value)} />\n            <TextField id=\"standard-basic\" label=\"Last Name\" value={this.state.lastName} onChange={evt => this.onChange('lastName', evt.target.value)}/>\n            <Mutation mutation={CREATE_EMPLOYEE} variables={{firstname: this.state.firstName, lastname: this.state.lastName}}>\n                {postMutation => <Button variant=\"contained\" color=\"primary\" \n                    onClick={() => {\n                        postMutation();\n                        submitButtonClicked();\n                        clearForm();\n                    }}>\n                Submit\n                </Button>}\n            </Mutation>\n        </FormControl>\n    )\n}\n\nconst ListOfEmployees = () => {\n    const { loading, error, data } = useQuery(LIST_EMPLOYEE);\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        //<TableBody>\n        <p>\n            {data.listEmployees.items.map(row => (\n                \n                    <p>\n                    {console.log(row)}\n                    </p> \n            ))}\n        </p>\n\n                // <TableRow key={row.id}>\n                //     <TableCell component=\"th\" scope=\"row\">\n                //         {row.id}\n                //         </TableCell>\n                //          <TableCell align>{row.id}</TableCell>\n                //         <TableCell align>{row.firstname}</TableCell>\n                //         <TableCell align>{row.lastname}</TableCell>\n                //         {/* <TableCell align onClick={() => this.editUser(row.id)}>Edit</TableCell>\n                //         <TableCell align onClick={() => this.deleteUser(row.id)}>Delete</TableCell> */}\n                // </TableRow>    \n        //</TableBody>\n    )\n}\n\n\n\nconst state = {\n    id: '',\n    firstName: '',\n    lastName: '',\n    skills: [],\n    visible: false,\n    title: 'Add Employee'\n}\n\nconst renderForm = state.visible ? ( <EmployeeForm /> ) : null;\nconst buttonText = state.title ? 'Add Employee' : 'Back';\n\nconst AddEmployee = () => { \n\n\n    return (\n        <div>\n            {renderForm}\n            <Button variant=\"contained\" color=\"primary\" className=\"addEmpButton\"\n            onClick={() => state.setState({visible: !state.visible, title: !state.title})} \n            >\n                {buttonText}\n            </Button>\n            \n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Id</TableCell>\n                        <TableCell>First Name</TableCell>\n                        <TableCell>Last Name</TableCell>\n                    </TableRow>\n                </TableHead>\n            </Table>\n\n            {/* <Query query={LIST_EMPLOYEE}>\n\n            </Query> */}\n        </div>\n    )\n}\n\nexport default AddEmployee;\n\n\n                    "]},"metadata":{},"sourceType":"module"}