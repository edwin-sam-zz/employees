{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Query } from 'react-apollo';\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, StepButton, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from 'react-apollo';\nimport CREATE_EMPLOYEE from './mutations/createEmployee';\nimport LIST_EMPLOYEE from './queries/ListEmployees';\nimport './index.css';\n\nconst EmployeeForm = () => {\n  _s();\n\n  const [id, setID] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [skills, setSkills] = useState([]);\n\n  const clearForm = () => {\n    setFirstName('');\n    setLastName('');\n  };\n\n  const submitButtonClicked = () => {\n    console.log(firstName);\n    console.log(lastName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: \"forms\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"First Name\",\n      value: firstName,\n      onChange: evt => setFirstName(evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"standard-basic\",\n      label: \"Last Name\",\n      value: lastName,\n      onChange: evt => setLastName(evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Mutation, {\n      mutation: CREATE_EMPLOYEE,\n      variables: {\n        firstname: firstName,\n        lastname: lastName\n      },\n      children: postMutation => /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => {\n          postMutation();\n          submitButtonClicked();\n          clearForm();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeForm, \"BipTAR32+a6KltsiqTRebhSI7rI=\");\n\n_c = EmployeeForm;\n\nconst AddEmployee = () => {\n  _s2();\n\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const clickButton = () => {\n    renderForm;\n    buttonText;\n  };\n\n  const renderForm = visible ? /*#__PURE__*/_jsxDEV(EmployeeForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 36\n  }, this) : null;\n  const buttonText = title ? title : setTitle('Back');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderForm, /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"addEmpButton\",\n      onClick: () => clickButton(),\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AddEmployee, \"H11zuNsWXRSAWjAerfFSeWH8EDE=\");\n\n_c2 = AddEmployee;\nexport default AddEmployee;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmployeeForm\");\n$RefreshReg$(_c2, \"AddEmployee\");","map":{"version":3,"sources":["/Users/edwin/Desktop/React/challenges/employees/src/AddEmployee.js"],"names":["Query","React","useState","Mutation","Table","TableCell","TableHead","TableRow","Button","FormControl","StepButton","TableBody","TextField","useMutation","useQuery","CREATE_EMPLOYEE","LIST_EMPLOYEE","EmployeeForm","id","setID","firstName","setFirstName","lastName","setLastName","skills","setSkills","clearForm","submitButtonClicked","console","log","evt","target","value","firstname","lastname","postMutation","AddEmployee","visible","setVisible","title","setTitle","clickButton","renderForm","buttonText"],"mappings":"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","sourcesContent":["import { Query } from 'react-apollo'\nimport React, { useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Table from '@material-ui/core/Table';    \nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { FormControl, StepButton, TableBody } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useMutation, useQuery } from 'react-apollo';\nimport CREATE_EMPLOYEE from './mutations/createEmployee'\nimport LIST_EMPLOYEE from './queries/ListEmployees'\n\nimport './index.css';\n\nconst EmployeeForm = () => {\n\n    const [id, setID] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [skills, setSkills] = useState([]);\n\n    const clearForm = () => {\n        setFirstName('');\n        setLastName('');\n    }\n\n    const submitButtonClicked = () => {\n            console.log(firstName);\n            console.log(lastName);\n    }\n\n    return (\n        <FormControl className=\"forms\">\n            <TextField id=\"standard-basic\" label=\"First Name\" value={firstName} onChange={evt => setFirstName(evt.target.value)} />\n            <TextField id=\"standard-basic\" label=\"Last Name\" value={lastName} onChange={evt => setLastName(evt.target.value)}/>\n            <Mutation mutation={CREATE_EMPLOYEE} variables={{firstname: firstName, lastname: lastName}}>\n                {postMutation => <Button variant=\"contained\" color=\"primary\" \n                    onClick={() => {\n                        postMutation();\n                        submitButtonClicked();\n                        clearForm();\n                    }}>\n                Submit\n                </Button>}\n            </Mutation>\n        </FormControl>\n    )\n}\n\nconst AddEmployee = () => { \n\n    const [visible, setVisible] = useState(false);\n    const [title, setTitle] = useState('');\n\n    const clickButton = () => {\n        renderForm;\n        buttonText;\n    }\n\n    const renderForm = visible ? ( <EmployeeForm /> ) : null;\n    const buttonText = title ? title : setTitle('Back');\n\n    return (\n        <div>\n            {renderForm}\n            <Button variant=\"contained\" color=\"primary\" className=\"addEmpButton\"\n            onClick={() => clickButton()} \n            >\n                {buttonText}\n            </Button>\n            <p>\n            </p>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Id</TableCell>\n                        <TableCell>First Name</TableCell>\n                        <TableCell>Last Name</TableCell>\n                    </TableRow>\n                </TableHead>\n            </Table>\n\n            {/* <Query query={LIST_EMPLOYEE}>\n\n            </Query> */}\n\n\n\n        </div>\n    )\n}\n         \nexport default AddEmployee;"]},"metadata":{},"sourceType":"module"}